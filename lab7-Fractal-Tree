import javax.swing.*;
import java.awt.*;

public class FractalTree extends JPanel {

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        // Start the recursion from the bottom center of the panel
        int startX = getWidth() / 2;
        int startY = getHeight() - 50;
        int MAX_DEPTH = 9;
        drawTree(g, startX, startY, -90, MAX_DEPTH);
    }


    private void drawTree(Graphics g, int x1, int y1, double angle, int depth) {
        // 1. Base Case
        if (depth == 0) return;

        // 2. Calculate branch length
        int branchLength = depth * 10;

        // 3. Calculate the end coordinates of this branch
        double rad = Math.toRadians(angle);
        int x2 = x1 + (int) (Math.cos(rad) * branchLength);
        int y2 = y1 + (int) (Math.sin(rad) * branchLength);

        // 4. Draw the current branch
        g.drawLine(x1, y1, x2, y2);

        // 5. Recursive calls for sub-branches
        // Left branch
        drawTree(g, x2, y2, angle - 20, depth - 1);
        // Right branch
        drawTree(g, x2, y2, angle + 30, depth - 1);
    }
}

import javax.swing.*;

public static void main(String[] args) {
    JFrame frame = new JFrame("Recursive Fractal Tree");
    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    frame.setSize(800, 700);
    frame.add(new FractalTree());
    frame.setLocationRelativeTo(null);
    frame.setVisible(true);
}
